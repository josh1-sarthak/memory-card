{"version":3,"sources":["components/ShowCards.js","App.js","index.js"],"names":["DivCards","styled","div","DivItem","ShowCards","props","id","img","name","birth","map","cardItem","onClick","computeScore","className","src","process","width","height","alt","GlobalStyle","createGlobalStyle","DivContainer","DivResult","App","useState","score","setScore","bestScore","setBestScore","items","setItems","useEffect","displayShuffle","cardsArray","Array","from","cards","forEach","card","parent","removeChild","array","i","length","j","Math","floor","random","shuffleCards","appendChild","document","querySelector","querySelectorAll","addEventListener","removeEventListener","e","val","currentTarget","includes","winScore","ReactDOM","render","StrictMode","getElementById"],"mappings":"6rBAGA,IAAMA,EAAWC,IAAOC,IAAV,KAQRC,EAAUF,IAAOC,IAAV,KA8EEE,EAjEG,SAACC,GAkDf,OACA,cAACL,EAAD,CAAUM,GAAG,SAAb,SAjDiB,CACb,CACIC,IAAK,aACLC,KAAM,2BACNC,MAAO,UAEX,CACIF,IAAK,aACLC,KAAK,iCACLC,MAAO,UAEX,CACIF,IAAK,cACLC,KAAM,oBACNC,MAAO,UAEX,CACIF,IAAK,gBACLC,KAAM,WACNC,MAAO,UAEX,CACIF,IAAK,qBACLC,KAAK,iCACLC,MAAO,UAEX,CACIF,IAAK,uBACLC,KAAM,kBACNC,MAAO,UAEX,CACIF,IAAK,2BACLC,KAAM,sBACNC,MAAO,UAEX,CACIF,IAAK,sBACLC,KAAM,oBACNC,MAAO,UAEX,CACIF,IAAK,iBACLC,KAAM,YACNC,MAAO,WAMDC,KAAI,SAACC,GAAD,OACV,eAACR,EAAD,CAA6BS,QAASP,EAAMQ,aAAcC,UAAU,QAApE,UACI,qBAAKC,IAAKC,eAAyBL,EAASJ,IAAKU,MAAM,QAAQC,OAAO,QAAQC,IAAKR,EAASH,OAC5F,wCAAWG,EAASH,KAApB,IAA0B,uBAA1B,SACWG,EAASF,WAHVE,EAASH,KADb,KAWrB,E,yjBCnFD,IAAMY,EAAcC,YAAH,KAMXC,EAAerB,IAAOC,IAAV,KAOZqB,EAAYtB,IAAOC,IAAV,KAwEAsB,EA3DH,WAAO,IAAD,EAEUC,mBAAS,GAFnB,mBAETC,EAFS,KAEFC,EAFE,OAGkBF,mBAAS,GAH3B,mBAGTG,EAHS,KAGEC,EAHF,OAIUJ,mBAAS,IAJnB,mBAITK,EAJS,KAIFC,EAJE,KA8ChB,OA3BAC,qBAAU,WAER,IAQMC,EAAiB,WACrB,IAAMC,EAAaC,MAAMC,KAAKC,GAC9BH,EAAWI,SAAQ,SAACC,GAAD,OAAUC,EAAOC,YAAYF,EAA7B,IAVA,SAACG,GACpB,IAAK,IAAIC,EAAED,EAAME,OAAO,EAAGD,EAAE,EAAGA,IAAK,CACnC,IAAIE,EAAEC,KAAKC,MAAMD,KAAKE,UAAWL,EAAE,IADA,EAEZ,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAF4B,KAExBD,EAAMG,GAFkB,IAGpC,CAEF,CAKCI,CAAaf,GACbA,EAAWI,SAAQ,SAACC,GAAD,OAAUC,EAAOU,YAAYX,EAA7B,GACpB,EAEKC,EAASW,SAASC,cAAc,WAChCf,EAAQG,EAAOa,iBAAiB,UAGtC,OAFAhB,EAAMC,SAAQ,SAACC,GAAD,OAASA,EAAKe,iBAAiB,QAASrB,EAAxC,IAEP,WACLI,EAAMC,SAAQ,SAACC,GAAD,OAASA,EAAKgB,oBAAoB,QAAStB,EAA3C,GACf,CACF,GAAE,IAID,eAACX,EAAD,WACE,cAACF,EAAD,IACA,cAAC,EAAD,CAAWP,aA3CK,SAAC2C,GACnB,IAAMC,EAAMD,EAAEE,cAEV5B,EAAM6B,SAASF,IACjB5B,GAAa,SAAA+B,GAAQ,OAAKlC,EAAQE,EAAYF,EAAQE,CAAjC,IACrBD,EAAS,GACTI,EAAS,MAETA,GAAS,SAAAD,GAAK,4BAASA,GAAT,CAAgB2B,GAAhB,IACd9B,EAASD,EAAQ,GAEpB,IAiCG,eAACH,EAAD,WACE,+CACA,iDAAoBG,EAApB,OACA,8CAAiBE,EAAjB,YAIP,ECnFDiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFZ,SAASa,eAAe,Q","file":"static/js/main.bb3d65bf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst DivCards = styled.div`\r\n    display: grid;\r\n    gap: 0.25rem;\r\n    grid-template-columns: repeat(auto-fill,minmax(250px,1fr));\r\n    padding: 5px;\r\n    min-width: 600px;\r\n`;\r\n\r\nconst DivItem = styled.div`\r\n  border: 4px solid black;\r\n  border-radius: 10px;\r\n  height: 210px;\r\n  width: 250px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  margin: 5px;\r\n`;\r\n\r\nconst ShowCards = (props) => {\r\n\r\n    const cardDeck = [\r\n        {\r\n            img: \"/floki.jpg\",\r\n            name: \"Flóki Vilgerðarson\",\r\n            birth: \"763 AD\",\r\n        },\r\n        {\r\n            img: \"/bjorn.jpg\",\r\n            name: `Björn \"Ironside\" Ragnarsson`,\r\n            birth: \"781 AD\",\r\n        },\r\n        {\r\n            img: \"/harald.jpg\",\r\n            name: \"Harald Sigurdsson\",\r\n            birth: \"763 AD\",\r\n        },\r\n        {\r\n            img: \"/lagertha.jpg\",\r\n            name: \"Lagertha\",\r\n            birth: \"763 AD\",\r\n        },\r\n        {\r\n            img: \"/ivar-boneless.jpg\",\r\n            name: `Ívarr \"Boneless\" Ragnarsson`,\r\n            birth: \"800 AD\",\r\n        },\r\n        {\r\n            img: \"/ubbe-ragnarsson.jpg\",\r\n            name: \"Ubbe Ragnarsson\",\r\n            birth: \"795 AD\",\r\n        },\r\n        {\r\n            img: \"/hvitserk-ragnarsson.jpg\",\r\n            name: \"Hvitserk Ragnarsson\",\r\n            birth: \"797 AD\",\r\n        },\r\n        {\r\n            img: \"/rollo-normandy.jpg\",\r\n            name: \"Rollo of Normandy\",\r\n            birth: \"762 AD\",\r\n        },\r\n        {\r\n            img: \"/athelstan.jpg\",\r\n            name: \"Athelstan\",\r\n            birth: \"780 AD\",\r\n        }\r\n    ]\r\n\r\n    return(\r\n    <DivCards id=\"parent\"> \r\n        {cardDeck.map((cardItem) => \r\n            <DivItem key={cardItem.name} onClick={props.computeScore} className=\"cards\">\r\n                <img src={process.env.PUBLIC_URL + cardItem.img} width=\"180px\" height=\"150px\" alt={cardItem.name} />\r\n                <p> Name: {cardItem.name} <br/>\r\n                    Born: {cardItem.birth}\r\n                </p>\r\n            </DivItem>\r\n        )} \r\n    </DivCards>\r\n\r\n    );\r\n}\r\n\r\nexport default ShowCards;","import React, { useState, useEffect } from \"react\";\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport ShowCards from './components/ShowCards';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background: #8B6220;\r\n  }\r\n`;\r\n\r\nconst DivContainer = styled.div`\r\n  font-family: monospace;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0 2rem 0 2rem;\r\n`;\r\n\r\nconst DivResult = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  border: 2px solid black;\r\n  padding: 5px;\r\n  font-size: 15px;\r\n  height: 200px;\r\n  width: 200px;\r\n  align-self: center;\r\n`;\r\n\r\nconst App = () => {\r\n\r\n  const [score, setScore] = useState(0);\r\n  const [bestScore, setBestScore] = useState(0);\r\n  const [items, setItems] = useState([]); // items is kinda like memory which holds visited item\r\n\r\n  const handleScore = (e) => {\r\n    const val = e.currentTarget;\r\n    // check if currently clicked item is in items array, if it is- bestscore->score and score->0, if not, setItems to items+clicked item and increment the score\r\n    if (items.includes(val)){\r\n      setBestScore(winScore => (score > bestScore ? score : bestScore)); //set bestscore(winScore) to score only if score > bestscore\r\n      setScore(0);\r\n      setItems([]); //make items array empty to play next chances\r\n    } else {\r\n      setItems(items => ([...items, val]));\r\n      setScore(score + 1);\r\n    }\r\n  }\r\n \r\n  useEffect(() => {\r\n\r\n    const shuffleCards = (array) => { \r\n      for (let i=array.length-1; i>0; i--) { // Fisher-Yates shuffle-The idea is to walk the array in the reverse order and swap each element with a random one before it\r\n        let j=Math.floor(Math.random()* (i+1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n      }\r\n      return array;\r\n    }\r\n\r\n    const displayShuffle = () => {\r\n      const cardsArray = Array.from(cards); // cardsArray is array that contains nodes\r\n      cardsArray.forEach((card) => parent.removeChild(card));\r\n      shuffleCards(cardsArray);\r\n      cardsArray.forEach((card) => parent.appendChild(card));\r\n    };\r\n\r\n    const parent = document.querySelector('#parent'); // parent is container\r\n    const cards = parent.querySelectorAll('.cards'); //cards is a nodelist\r\n    cards.forEach((card)=> card.addEventListener('click', displayShuffle)); //add event listener on nodelist not array\r\n    \r\n    return () => {\r\n      cards.forEach((card)=> card.removeEventListener('click', displayShuffle)); //add event listener on nodelist not array\r\n    };\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <DivContainer>\r\n      <GlobalStyle/>\r\n      <ShowCards computeScore={handleScore} />\r\n      <DivResult>\r\n        <h2> memory-card </h2>\r\n        <p> Current Score: {score} </p>\r\n        <p> Best Score: {bestScore} </p>\r\n      </DivResult>\r\n    </DivContainer>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}